{"version":3,"sources":["components/Login/Login.js","config/Fire.js","config/db.js"],"names":["Login","props","onFinish","values","a","user","state","find","one","email","password","message","error","setState","redirectToReferrer","localStorage","setItem","JSON","stringify","userName","image","data","this","database","on","snap","push","id","key","val","parse","getItem","to","className","name","initialValues","remember","Item","rules","required","type","prefix","placeholder","htmlType","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ref","child","storage","databaseOrder","databaseTrainer","databasecertificate","databaseContact","databaseUser","auth"],"mappings":"0TAOqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,SArBmB,uCAqBR,WAAOC,GAAP,eAAAC,EAAA,uDACHC,EAAO,EAAKC,MAAMD,KAAKE,MAC3B,SAACC,GAAD,OAASA,EAAIC,QAAUN,EAAOM,OAASD,EAAIE,WAAaP,EAAOO,cAG/DC,IAAQC,MAAM,oCAGZP,IACF,EAAKQ,SAAS,CAAEC,oBAAoB,IACpCC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUb,KAVrC,2CArBQ,sDAEjB,EAAKC,MAAQ,CACXa,SAAU,GACVC,MAAO,GACPN,oBAAoB,EACpBL,MAAO,GACPJ,KAAM,IAPS,E,sDAUnB,WAAsB,IAAD,OACbgB,EAAOC,KAAKhB,MAAMD,KACxBkB,IAASC,GAAG,eAAe,SAACC,GAC1BJ,EAAKK,KAAK,CACRC,GAAIF,EAAKG,IACTnB,MAAOgB,EAAKI,MAAMpB,MAClBC,SAAUe,EAAKI,MAAMnB,WAEvB,EAAKG,SAAS,CAAER,KAAMgB,S,oBAgB1B,WACE,OACoC,IAAlCC,KAAKhB,MAAMQ,oBACXG,KAAKa,MAAMf,aAAagB,QAAQ,SAGzB,kBAAC,IAAD,CAAUC,GAAG,eAGpB,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uCACb,wBAAIA,UAAU,eAAd,2BACA,kBAAC,IAAD,CACEC,KAAK,eACLD,UAAU,aACVE,cAAe,CACbC,UAAU,GAEZlC,SAAUoB,KAAKpB,UAEf,kBAAC,IAAKmC,KAAN,CACEH,KAAK,QACLI,MAAO,CACL,CACEC,UAAU,EACV5B,QAAS,8BAIb,kBAAC,IAAD,CACE6B,KAAK,QACLC,OAAQ,kBAAC,IAAD,CAAcR,UAAU,wBAChCS,YAAY,WAGhB,kBAAC,IAAKL,KAAN,CACEH,KAAK,WACLI,MAAO,CACL,CACEC,UAAU,EACV5B,QAAS,iCAIb,kBAAC,IAAD,CACE8B,OAAQ,kBAAC,IAAD,CAAcR,UAAU,wBAChCO,KAAK,WACLE,YAAY,cAIhB,kBAAC,IAAKL,KAAN,KACE,kBAAC,IAAD,CACEG,KAAK,UACLG,SAAS,SACTV,UAAU,0BAHZ,mB,GAxFmBW,c,mSCInCC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,ECTctB,G,MAAYsB,EAAStB,WAAW8B,MAAMC,MAAM,YAC7CC,EAAUV,EAASU,UAClBC,EAAiBX,EAAStB,WAAW8B,MAAMC,MAAM,SAClDG,EAAkBZ,EAAStB,WAAW8B,MAAMC,MAAM,WAClDI,EAAsBb,EAAStB,WAAW8B,MAAMC,MAAM,eACtDK,EAAkBd,EAAStB,WAAW8B,MAAMC,MAAM,WAClDM,EAAef,EAAStB,WAAW8B,MAAMC,MAAM,QACxCT,EAASgB","file":"static/js/25.7090e541.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { databaseUser as database } from \"../../config/db\";\nimport { message } from \"antd\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      image: \"\",\n      redirectToReferrer: false,\n      email: \"\",\n      user: [],\n    };\n  }\n  componentWillMount() {\n    const data = this.state.user;\n    database.on(\"child_added\", (snap) => {\n      data.push({\n        id: snap.key,\n        email: snap.val().email,\n        password: snap.val().password,\n      });\n      this.setState({ user: data });\n    });\n  }\n  onFinish = async (values) => {\n    const user = this.state.user.find(\n      (one) => one.email === values.email && one.password === values.password\n    );\n    if (!user) {\n      message.error(\"Email or Password did not match!\");\n    }\n\n    if (user) {\n      this.setState({ redirectToReferrer: true });\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    }\n  };\n  render() {\n    if (\n      this.state.redirectToReferrer === true ||\n      JSON.parse(localStorage.getItem(\"user\"))\n    ) {\n    \n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"ibarizo_home\">\n        <div className=\"container\">\n          <div className=\"dashboard_container mt-5 w-50 login\">\n            <h5 className=\"text-center\">Login as administrator </h5>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n            >\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Email!\",\n                  },\n                ]}\n              >\n                <Input\n                  type=\"email\"\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"email\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Password!\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button w-50\"\n                >\n                  Log in\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import firebase from 'firebase';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCgFUfBCJo5BlJCPi8OnEVOxpBzvlJIgtQ\",\n  authDomain: \"woody-shop-rw.firebaseapp.com\",\n  projectId: \"woody-shop-rw\",\n  storageBucket: \"woody-shop-rw.appspot.com\",\n  messagingSenderId: \"288308342990\",\n  appId: \"1:288308342990:web:36958ef29637b6f6f2e09f\"\n\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;","import firebase from './Fire';\nimport 'firebase/database';\n\nexport  const database =  firebase.database().ref().child(\"product\");\nexport const storage = firebase.storage();\nexport  const databaseOrder =  firebase.database().ref().child(\"order\");\nexport const databaseTrainer = firebase.database().ref().child(\"trainer\");\nexport const databasecertificate = firebase.database().ref().child(\"certificate\");\nexport const databaseContact = firebase.database().ref().child(\"message\");\nexport const databaseUser = firebase.database().ref().child(\"user\");\nexport const auth = firebase.auth()"],"sourceRoot":""}